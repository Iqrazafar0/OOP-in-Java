// Class diagrams
class Diagram {
    // Attributes
    private String title;
    private String author;
    private int pubYear;

    // Constructor 
    Diagram(String title, String author, int pubYear) {
        this.title = title;
        this.author = author;
        this.pubYear = pubYear;
    }

    // Method to display diagram details
    public void display() {
        System.out.println("Title: " + title);
        System.out.println("Author: " + author);
        System.out.println("Publication Year: " + pubYear);
    }
}

// Base class Resource
class Resource {
    // Attributes
    String title;
    int pubYear;
    boolean availability;

    // Constructor 
    Resource(String title, int pubYear, boolean availability) {
        this.title = title;
        this.pubYear = pubYear;
        this.availability = availability;
    }

    // Method to display resource details
    public void displayInfo() {
        System.out.println("Title: " + title);
        System.out.println("Publication Year: " + pubYear);
        System.out.println("Availability: " + (availability ? "Available" : "Not Available"));
    }
}

// Subclass Book
class Book extends Resource {
    private String ISBN;

    Book(String title, int pubYear, boolean availability, String ISBN) {
        super(title, pubYear, availability);
        this.ISBN = ISBN;
    }

    public String getISBN() {
        return ISBN;
    }

    public void displayInfo() {
        super.displayInfo();
        System.out.println("ISBN: " + ISBN);
    }
}

// Subclass Magazine
class Magazine extends Resource {
    private String issue;

    Magazine(String title, int pubYear, boolean availability, String issue) {
        super(title, pubYear, availability);
        this.issue = issue;
    }

    public String getIssue() {
        return issue;
    }

    public void displayInfo() {
        super.displayInfo();
        System.out.println("Issue: " + issue);
    }
}

// Subclass DVD
class DVD extends Resource {
    private int play;

    DVD(String title, int pubYear, boolean availability, int play) {
        super(title, pubYear, availability);
        this.play = play;
    }

    public int getDuration() {
        return play;
    }

    public void displayInfo() {
        super.displayInfo();
        System.out.println("Play: " + play + " minutes");
    }
}

//  Composition
class Library {
    private Diagram libraryDiagram;
    private Resource[] resources;

    Library(Diagram libraryDiagram, Resource[] resources) {
        this.libraryDiagram = libraryDiagram;
        this.resources = resources;
    }

    public void displayLibraryInfo() {
        System.out.println("Library Diagram:");
        libraryDiagram.display();

        System.out.println("\nResources:");
        for (Resource resource : resources) {
            resource.displayInfo();
            System.out.println();
        }
    }
}

// Main class
public class librMain {
    public static void main(String[] args) {
        // Create a Diagram object
        Diagram libraryDiagram = new Diagram("Library Blueprint", "John Doe", 2022);

        // Create Resource objects
        Book book = new Book("Java Programming", 2018, true, "978-3-16-148410-0");
        Magazine magazine = new Magazine("Tech Today", 2020, false, "April 2020");
        DVD dvd = new DVD("Learning Java", 2019, true, 120);

        // Create an array of resources and add the resources
        Resource[] resources = { book, magazine, dvd };

        // Create a Library object with composition
        Library library = new Library(libraryDiagram, resources);

        // Display library information
        library.displayLibraryInfo();
    }
}
